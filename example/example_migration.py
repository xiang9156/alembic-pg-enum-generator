"""
Example auto-generated migration showing simple-enum-generator output.

This is what would be generated by running:
alembic revision --autogenerate -m "Add new enum values"

Revision ID: abc123def456
Revises: previous_revision
Create Date: 2024-01-01 12:00:00.000000
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers
revision = 'abc123def456'
down_revision = 'previous_revision'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Auto-generated by simple-enum-generator
    # These operations use efficient ALTER TYPE ... ADD VALUE statements
    
    # Add new value to user_status enum
    op.add_enum_value('public', 'user_status', 'pending')
    
    # Add new values to order_status enum
    op.add_enum_value('public', 'order_status', 'processing')
    op.add_enum_value('public', 'order_status', 'delivered')


def downgrade() -> None:
    # Downgrade not supported for add-only operations
    # This maintains compatibility by not removing enum values
    pass